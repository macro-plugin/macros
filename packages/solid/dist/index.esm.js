import{createMacro as t,markedNode as e,createLabeledBlock as a}from"@macro-plugin/core";function r(t){return"set"+t[0].toUpperCase()+t.slice(1)}var n=t({LabeledStatement(t){if("BlockStatement"!==t.body.type||"signal"!==t.label.value)return;const a={};let n;for(const e of t.body.stmts){if("VariableDeclaration"!==e.type||"var"!==e.kind)throw new Error("Expect a `var` kind VariableDeclaration node in signal block");for(const t of e.declarations){if("Identifier"!==t.id.type)throw new Error("Expect pure identifier");n=t.id.value,a[n]={value:t.init,setter:r(n)}}}return Object.keys(a).length>0?(this.import("createSignal","solid-js"),Object.entries(a).map((([t,a])=>({type:"VariableDeclaration",kind:"var",declare:!1,span:{start:0,end:0,ctxt:0},declarations:[{type:"VariableDeclarator",definite:!1,span:{start:0,end:0,ctxt:0},id:{type:"ArrayPattern",optional:!1,span:{start:0,end:0,ctxt:0},elements:[e("signal",{type:"Identifier",value:t,optional:!1,span:{start:0,end:0,ctxt:0}}),e("signalSetter",{type:"Identifier",value:a.setter,optional:!1,span:{start:0,end:0,ctxt:0}})]},init:{type:"CallExpression",callee:{type:"Identifier",value:"createSignal",optional:!1,span:{start:0,end:0,ctxt:1}},span:{start:0,end:0,ctxt:0},arguments:[{expression:a.value}]}}]})))):void 0},AssignmentExpression(t){var e;if("Identifier"===t.left.type&&"signal"===(null===(e=this.track(t.left.value))||void 0===e?void 0:e.marker)){const e=t.left.value;return{type:"CallExpression",callee:{type:"Identifier",value:r(e),optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:"="===t.operator?t.right:{type:"BinaryExpression",left:{type:"CallExpression",callee:{type:"Identifier",value:e,optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[],span:{start:0,end:0,ctxt:0}},operator:t.operator.replace("=",""),span:{start:0,end:0,ctxt:0},right:t.right}}],span:{start:0,end:0,ctxt:0}}}},UpdateExpression(t){var e;if("Identifier"===t.argument.type&&"signal"===(null===(e=this.track(t.argument.value))||void 0===e?void 0:e.marker)){const e=t.argument.value;return t.argument={type:"CallExpression",callee:t.argument,arguments:[],span:{start:0,end:0,ctxt:0}},{type:"CallExpression",callee:{type:"Identifier",value:r(e),optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:t}],span:{start:0,end:0,ctxt:0}}}}});function s(t){return"set"+t[0].toUpperCase()+t.slice(1)}const i=t({LabeledStatement(t){const a={};if("BlockStatement"===t.body.type&&"store"===t.label.value){let r;for(const e of t.body.stmts){if("VariableDeclaration"!==e.type||"var"!==e.kind)throw new Error("Expect a `var` kind VariableDeclaration node in store block");for(const t of e.declarations){if("Identifier"!==t.id.type)throw new Error("Expect a pure Identifier.");r=t.id.value,a[r]={value:t.init,setter:s(r)}}}if(Object.keys(a).length>0)return this.import("createStore","solid-js/store"),Object.entries(a).map((([t,a])=>({type:"VariableDeclaration",kind:"var",declare:!1,span:{start:0,end:0,ctxt:0},declarations:[{type:"VariableDeclarator",id:{type:"ArrayPattern",span:{start:0,end:0,ctxt:0},optional:!1,elements:[e("store",{type:"Identifier",value:t,optional:!1,span:{start:0,end:0,ctxt:1}}),e("storeSetter",{type:"Identifier",value:a.setter,optional:!1,span:{start:0,end:0,ctxt:1}})]},init:{type:"CallExpression",callee:{type:"Identifier",value:"createStore",optional:!1,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0},arguments:[{expression:a.value}]},span:{start:0,end:0,ctxt:0}}]})))}},AssignmentExpression(t){var e;if("Identifier"===t.left.type&&"store"===(null===(e=this.track(t.left.value))||void 0===e?void 0:e.marker)){const e=t.left.value;return{type:"CallExpression",callee:{type:"Identifier",value:s(e),optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:"="===t.operator?t.right:{type:"BinaryExpression",left:{type:"CallExpression",callee:{type:"Identifier",value:e,span:{start:0,end:0,ctxt:0},optional:!1},arguments:[],span:{start:0,end:0,ctxt:0}},operator:t.operator.replace("=",""),right:t.right,span:{start:0,end:0,ctxt:0}}}],span:{start:0,end:0,ctxt:0}}}},UpdateExpression(t){var e;if("Identifier"===t.argument.type&&"store"===(null===(e=this.track(t.argument.value))||void 0===e?void 0:e.marker)){const e=t.argument.value;return t.argument={type:"CallExpression",callee:t.argument,arguments:[],span:{start:0,end:0,ctxt:0}},{type:"CallExpression",callee:{type:"Identifier",value:s(e),optional:!1,span:{start:0,end:0,ctxt:1}},arguments:[{expression:t}],span:{start:0,end:0,ctxt:0}}}}}),l=a("effect","createEffect","solid-js",!0),o=a("onMount","onMount","solid-js"),p=a("onError","onError","solid-js"),c=a("onCleanup","onCleanup","solid-js");export{l as effect,c as onCleanup,p as onError,o as onMount,n as signal,i as store};
