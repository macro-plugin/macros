!function(e,t){function a(e){return"set"+e[0].toUpperCase()+e.slice(1)}var r=t.createMacro({LabeledStatement(e){if("BlockStatement"!==e.body.type||"signal"!==e.label.value)return;const r={};let n;for(const t of e.body.stmts){if("VariableDeclaration"!==t.type||"var"!==t.kind)throw new Error("Expect a `var` kind VariableDeclaration node in signal block");for(const e of t.declarations){if("Identifier"!==e.id.type)throw new Error("Expect pure identifier");n=e.id.value,r[n]={value:e.init,setter:a(n)}}}return Object.keys(r).length>0?(this.import("createSignal","solid-js"),Object.entries(r).map((([e,a])=>({type:"VariableDeclaration",kind:"var",declare:!1,span:{start:0,end:0,ctxt:0},declarations:[{type:"VariableDeclarator",definite:!1,span:{start:0,end:0,ctxt:0},id:{type:"ArrayPattern",optional:!1,span:{start:0,end:0,ctxt:0},elements:[t.markedNode("signal",{type:"Identifier",value:e,optional:!1,span:{start:0,end:0,ctxt:0}}),t.markedNode("signalSetter",{type:"Identifier",value:a.setter,optional:!1,span:{start:0,end:0,ctxt:0}})]},init:{type:"CallExpression",callee:{type:"Identifier",value:"createSignal",optional:!1,span:{start:0,end:0,ctxt:1}},span:{start:0,end:0,ctxt:0},arguments:[{expression:a.value}]}}]})))):void 0},AssignmentExpression(e){var t;if("Identifier"===e.left.type&&"signal"===(null===(t=this.track(e.left.value))||void 0===t?void 0:t.marker)){const t=e.left.value;return{type:"CallExpression",callee:{type:"Identifier",value:a(t),optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:"="===e.operator?e.right:{type:"BinaryExpression",left:{type:"CallExpression",callee:{type:"Identifier",value:t,optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[],span:{start:0,end:0,ctxt:0}},operator:e.operator.replace("=",""),span:{start:0,end:0,ctxt:0},right:e.right}}],span:{start:0,end:0,ctxt:0}}}},UpdateExpression(e){var t;if("Identifier"===e.argument.type&&"signal"===(null===(t=this.track(e.argument.value))||void 0===t?void 0:t.marker)){const t=e.argument.value;return e.argument={type:"CallExpression",callee:e.argument,arguments:[],span:{start:0,end:0,ctxt:0}},{type:"CallExpression",callee:{type:"Identifier",value:a(t),optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:e}],span:{start:0,end:0,ctxt:0}}}}});function n(e){return"set"+e[0].toUpperCase()+e.slice(1)}const s=t.createMacro({LabeledStatement(e){const a={};if("BlockStatement"===e.body.type&&"store"===e.label.value){let r;for(const t of e.body.stmts){if("VariableDeclaration"!==t.type||"var"!==t.kind)throw new Error("Expect a `var` kind VariableDeclaration node in store block");for(const e of t.declarations){if("Identifier"!==e.id.type)throw new Error("Expect a pure Identifier.");r=e.id.value,a[r]={value:e.init,setter:n(r)}}}if(Object.keys(a).length>0)return this.import("createStore","solid-js/store"),Object.entries(a).map((([e,a])=>({type:"VariableDeclaration",kind:"var",declare:!1,span:{start:0,end:0,ctxt:0},declarations:[{type:"VariableDeclarator",id:{type:"ArrayPattern",span:{start:0,end:0,ctxt:0},optional:!1,elements:[t.markedNode("store",{type:"Identifier",value:e,optional:!1,span:{start:0,end:0,ctxt:1}}),t.markedNode("storeSetter",{type:"Identifier",value:a.setter,optional:!1,span:{start:0,end:0,ctxt:1}})]},init:{type:"CallExpression",callee:{type:"Identifier",value:"createStore",optional:!1,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0},arguments:[{expression:a.value}]},span:{start:0,end:0,ctxt:0}}]})))}},AssignmentExpression(e){var t;if("Identifier"===e.left.type&&"store"===(null===(t=this.track(e.left.value))||void 0===t?void 0:t.marker)){const t=e.left.value;return{type:"CallExpression",callee:{type:"Identifier",value:n(t),optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:"="===e.operator?e.right:{type:"BinaryExpression",left:{type:"CallExpression",callee:{type:"Identifier",value:t,span:{start:0,end:0,ctxt:0},optional:!1},arguments:[],span:{start:0,end:0,ctxt:0}},operator:e.operator.replace("=",""),right:e.right,span:{start:0,end:0,ctxt:0}}}],span:{start:0,end:0,ctxt:0}}}},UpdateExpression(e){var t;if("Identifier"===e.argument.type&&"store"===(null===(t=this.track(e.argument.value))||void 0===t?void 0:t.marker)){const t=e.argument.value;return e.argument={type:"CallExpression",callee:e.argument,arguments:[],span:{start:0,end:0,ctxt:0}},{type:"CallExpression",callee:{type:"Identifier",value:n(t),optional:!1,span:{start:0,end:0,ctxt:1}},arguments:[{expression:e}],span:{start:0,end:0,ctxt:0}}}}}),i=t.createLabeledBlock("effect","createEffect","solid-js",!0),o=t.createLabeledBlock("onMount","onMount","solid-js"),l=t.createLabeledBlock("onError","onError","solid-js"),p=t.createLabeledBlock("onCleanup","onCleanup","solid-js");e.effect=i,e.onCleanup=p,e.onError=l,e.onMount=o,e.signal=r,e.store=s}({},MacroCore);
