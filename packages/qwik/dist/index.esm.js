import{createMacro as t,createLabeledBlock as e,createLabeledMacro as n,markedNode as i,walk as a,unMarkNode as s}from"@macro-plugin/core";function r(t){let e;if(t.body&&"BlockStatement"===t.body.type)for(let n=0;n<t.body.stmts.length;n++)if("LabeledStatement"===t.body.stmts[n].type&&(e=t.body.stmts[n],"qwik"===e.label.value)){if("ExpressionStatement"!==e.body.type||"BooleanLiteral"!==e.body.expression.type)throw new Error("Expect an boolean in qwik macro.");{t.body.stmts=t.body.stmts.filter(((t,e)=>e!==n));const i="identifier"in t&&null!=t.identifier;if(e.body.expression.value){this.import("component$","@builder.io/qwik");const e={type:"CallExpression",span:{start:55,end:79,ctxt:0},callee:{type:"Identifier",span:{start:55,end:65,ctxt:2},value:"component$",optional:!1},arguments:[{expression:i?{type:"ArrowFunctionExpression",span:{start:66,end:78,ctxt:0},params:t.params.map((t=>t.pat)),body:t.body,async:!1,generator:!1}:t}]};return i?{type:"VariableDeclaration",span:{start:43,end:80,ctxt:0},kind:"const",declare:!1,declarations:[{type:"VariableDeclarator",span:{start:49,end:79,ctxt:0},id:t.identifier,init:e,definite:!1}]}:e}}}}const o=t({FunctionDeclaration(t){return r.apply(this,[t])},FunctionExpression(t){return r.apply(this,[t])},ArrowFunctionExpression(t){return r.apply(this,[t])}}),p=e("task","useTask$","@builder.io/qwik"),l=e("vtask","useVisibleTask$","@builder.io/qwik",!0),c=t=>{let e;return t=t.map((t=>{if("VariableDeclaration"===t.type&&"var"===t.kind){if("Identifier"!==t.declarations[0].id.type)throw new Error("Expect an Identifier");return e=t.declarations[0].id,{type:"ReturnStatement",argument:t.declarations[0].init,span:{start:0,end:0,ctxt:0}}}return t})),[e,t]},d=n("resource",(function(t){if(this.import("useResource$","@builder.io/qwik"),"BlockStatement"===t.type){const[e,n]=c(t.stmts);return{type:"VariableDeclaration",declarations:[{type:"VariableDeclarator",definite:!1,span:{start:0,end:0,ctxt:0},id:e,init:{type:"CallExpression",callee:{type:"Identifier",optional:!1,value:"useResource$",span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0},arguments:[{expression:{type:"ArrowFunctionExpression",generator:!1,async:!1,params:[],span:{start:0,end:0,ctxt:0},body:{type:"BlockStatement",stmts:n,span:{start:0,end:0,ctxt:0}}}}]}}],span:{start:0,end:0,ctxt:0},declare:!1,kind:"const"}}if("ExpressionStatement"===t.type&&"ArrowFunctionExpression"===t.expression.type){let e,n;if("BlockStatement"!==t.expression.body.type)throw new Error("expect an arrow block inside resource.");return[e,n]=c(t.expression.body.stmts),t.expression.body.stmts=n,{type:"VariableDeclaration",declarations:[{type:"VariableDeclarator",definite:!1,span:{start:0,end:0,ctxt:0},id:e,init:{type:"CallExpression",callee:{type:"Identifier",value:"useResource$",span:{start:0,end:0,ctxt:0},optional:!1},arguments:[{expression:t.expression}],span:{start:0,end:0,ctxt:0}}}],kind:"const",span:{start:0,end:0,ctxt:0},declare:!1}}throw new Error("this macro only accept a ArrowFunction or BlockStatement")})),y=n("store",(function(t){if("BlockStatement"!==t.type)return;const e={};let n;for(const i of t.stmts){if("VariableDeclaration"!==i.type||"var"!==i.kind)throw new Error("Expect a `var` kind VariableDeclaration node in store block");for(const t of i.declarations){if("Identifier"!==t.id.type)throw new Error("Expect Identifier in store");n=t.id.value,e[n]={value:t.init}}}return Object.keys(e).length>0?(this.import("useStore","@builder.io/qwik"),Object.entries(e).map((([t,e])=>({type:"VariableDeclaration",kind:"const",declare:!1,declarations:[{type:"VariableDeclarator",id:i("qwikStore",{type:"Identifier",value:t,optional:!1,span:{start:0,end:0,ctxt:1}}),init:{type:"CallExpression",callee:{type:"Identifier",value:"useStore",optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:e.value}],span:{start:0,end:0,ctxt:0}},definite:!1,span:{start:0,end:0,ctxt:0}}],span:{start:0,end:0,ctxt:0}})))):void 0})),u=t({LabeledStatement(t){if("BlockStatement"!==t.body.type||"signal"!==t.label.value)return;const e={};let n;for(const i of t.body.stmts){if("VariableDeclaration"!==i.type||"var"!==i.kind)throw new Error("Expect a `var` kind VariableDeclaration node in signal block");for(const t of i.declarations){if("Identifier"!==t.id.type)throw new Error("Expect Identifier in signal");n=t.id.value,e[n]={value:t.init}}}return Object.keys(e).length>0?(this.import("useSignal","@builder.io/qwik"),Object.entries(e).map((([t,e])=>({type:"VariableDeclaration",kind:"const",declare:!1,declarations:[{type:"VariableDeclarator",id:i("qwikSignal",{type:"Identifier",value:t,optional:!1,span:{start:0,end:0,ctxt:1}}),init:{type:"CallExpression",callee:{type:"Identifier",value:"useSignal",optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:e.value}],span:{start:0,end:0,ctxt:0}},definite:!1,span:{start:0,end:0,ctxt:0}}],span:{start:0,end:0,ctxt:0}})))):void 0},Identifier(t,e){var n;"VariableDeclarator"!==(null==e?void 0:e.type)&&"qwikSignal"===(null===(n=this.track(t.value))||void 0===n?void 0:n.marker)&&(this.replace({type:"MemberExpression",object:t,property:{type:"Identifier",value:"value",optional:!1,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0}}),this.skip())}}),x=t({LabeledStatement:{enter(t){var e;if("document"===t.label.value&&"BlockStatement"===t.body.type)return void this.set("QwikInDocument",!0);if("window"===t.label.value&&"BlockStatement"===t.body.type)return void this.set("QwikInWindow",!0);const n=this.get("QwikInDocument",!1),i=this.get("QwikInWindow",!1);if(!t.label.value.startsWith("on")||!["BlockStatement","ExpressionStatement"].includes(t.body.type))return;let a,s=n?"useOnDocument":i?"useOnWindow":"useOn";if(this.import("$","@builder.io/qwik"),"BlockStatement"===t.body.type){const e=t.body.stmts[0];e&&"LabeledStatement"===e.type&&("document"===e.label.value?(t.body.stmts=t.body.stmts.slice(1),s="useOnDocument"):"window"===e.label.value&&(t.body.stmts=t.body.stmts.slice(1),s="useOnWindow")),a={type:"ArrowFunctionExpression",span:{start:26,end:87,ctxt:0},params:[],body:t.body,async:!1,generator:!1}}else if("ExpressionStatement"===t.body.type&&(a=t.body.expression,("FunctionExpression"===t.body.expression.type||"ArrowFunctionExpression"===t.body.expression.type)&&"BlockStatement"===(null===(e=t.body.expression.body)||void 0===e?void 0:e.type))){const e=t.body.expression.body.stmts[0];e&&"LabeledStatement"===e.type&&("document"===e.label.value?(t.body.expression.body.stmts=t.body.expression.body.stmts.slice(1),s="useOnDocument"):"window"===e.label.value&&(t.body.expression.body.stmts=t.body.expression.body.stmts.slice(1),s="useOnWindow"))}return this.import(s,"@builder.io/qwik"),{type:"ExpressionStatement",span:{start:0,end:93,ctxt:0},expression:{type:"CallExpression",span:{start:0,end:92,ctxt:0},callee:{type:"Identifier",span:{start:0,end:5,ctxt:1},value:s,optional:!1},arguments:[{expression:{type:"StringLiteral",span:{start:11,end:18,ctxt:0},value:t.label.value.slice(2),raw:`'${t.label.value.slice(2)}'`}},{expression:{type:"CallExpression",span:{start:24,end:88,ctxt:0},callee:{type:"Identifier",span:{start:24,end:25,ctxt:1},value:"$",optional:!1},arguments:[{expression:a}]}}]}}},leave(t){"document"===t.label.value&&"BlockStatement"===t.body.type&&(this.replace(t.body.stmts),this.set("QwikInDocument",!1)),"window"===t.label.value&&"BlockStatement"===t.body.type&&(this.replace(t.body.stmts),this.set("QwikInWindow",!1))}}}),m=n("computed",(function(t){if("BlockStatement"!==t.type)return;const e={},n=[];let r;for(const i of t.stmts){if("VariableDeclaration"!==i.type||"var"!==i.kind)throw new Error("Expect a `var` kind VariableDeclaration node in signal block");for(const t of i.declarations){if("Identifier"!==t.id.type)throw new Error("Expect an Identifier");if(r=t.id.value,t.init){e[r]={value:JSON.parse(JSON.stringify(t.init)),computed:t.init};const i=t=>{var e;return"qwikSignal"===(null===(e=this.track(t))||void 0===e?void 0:e.marker)};a(t.init,{enter(t){if("Identifier"===t.type){const e=t.value;i(e)&&(s(t),t.value="__"+e,n.includes(e)||n.push(e))}}})}}}return Object.keys(e).length>0?(this.import(["useSignal","useTask$"],"@builder.io/qwik"),[...Object.entries(e).map((([t,e])=>({type:"VariableDeclaration",kind:"const",declarations:[{type:"VariableDeclarator",id:i("qwikSignal",{type:"Identifier",value:t,span:{start:0,end:0,ctxt:0},optional:!1}),init:{type:"CallExpression",callee:{type:"Identifier",value:"useSignal",span:{start:0,end:0,ctxt:0},optional:!1},arguments:[{expression:e.value}],span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0}}],declare:!1,span:{start:0,end:0,ctxt:0}}))),{type:"ExpressionStatement",span:{start:0,end:0,ctxt:0},expression:{type:"CallExpression",callee:{type:"Identifier",value:"useTask$",optional:!1,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0},arguments:[{expression:{type:"ArrowFunctionExpression",async:!1,generator:!1,params:[{type:"ObjectPattern",optional:!1,span:{start:0,end:0,ctxt:0},properties:[{type:"AssignmentPatternProperty",span:{start:0,end:0,ctxt:0},key:{type:"Identifier",value:"track",optional:!1,span:{start:0,end:0,ctxt:1}}}]}],body:{type:"BlockStatement",span:{start:0,end:0,ctxt:0},stmts:[...n.map((t=>({type:"VariableDeclaration",kind:"const",declarations:[{type:"VariableDeclarator",definite:!1,span:{start:0,end:0,ctxt:0},id:{type:"Identifier",value:"__"+t,span:{start:0,end:0,ctxt:0},optional:!1},init:{type:"CallExpression",callee:{type:"Identifier",value:"track",span:{start:0,end:0,ctxt:0},optional:!1},span:{start:0,end:0,ctxt:0},arguments:[{expression:{type:"ArrowFunctionExpression",async:!1,generator:!1,params:[],body:{type:"Identifier",value:t,optional:!1,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0}}}]}}],declare:!1,span:{start:0,end:0,ctxt:0}}))),...Object.entries(e).map((([t,e])=>({type:"ExpressionStatement",expression:{type:"AssignmentExpression",operator:"=",left:i("qwikSignal",{type:"Identifier",value:t,optional:!1,span:{start:0,end:0,ctxt:0}}),right:e.computed,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0}})))]},span:{start:0,end:0,ctxt:0}}}]}}]):void 0})),b=n("css",(function(t){if("ExpressionStatement"===t.type){const e=this.get("QwikScoped",!1)?"useStyleScoped$":"useStyle$";return this.import(e,"@builder.io/qwik"),t.expression={type:"CallExpression",span:{start:109,end:119,ctxt:0},callee:{type:"Identifier",span:{start:109,end:112,ctxt:1},value:e,optional:!1},arguments:[{expression:t.expression}]},t}throw new Error("this macro only accept an Expression")})),f=n("link",(function(t){if("ExpressionStatement"!==t.type)return;let e,n=this.get("QwikLinkCount",0);const i=this.get("QwikScoped",!1)?"useStyleScoped$":"useStyles$",a=[];if("StringLiteral"===t.expression.type)e="__link"+n,a.push(e),this.import(e,t.expression.value,!0),n+=1;else{if("ArrayExpression"!==t.expression.type)throw new Error("Only support StringLiteral or ArrayExpression");for(const i of t.expression.elements){if("StringLiteral"!==(null==i?void 0:i.expression.type))throw new Error("Expect a StringLiteral");e="__link"+n,a.push(e),this.import(e,i.expression.value,!0),n+=1}}return this.set("QwikLinkCount",n),this.import(i,"@builder.io/qwik"),a.map((t=>({type:"ExpressionStatement",span:{start:109,end:119,ctxt:0},expression:{type:"CallExpression",span:{start:109,end:119,ctxt:0},callee:{type:"Identifier",span:{start:109,end:112,ctxt:1},value:i,optional:!1},arguments:[{expression:{type:"Identifier",span:{start:113,end:118,ctxt:1},value:t,optional:!1}}]}})))})),k=n("scoped",{enter(t){if("BlockStatement"!==t.type)throw new Error("Only accept BlockStatement in scoped macro.");this.set("QwikScoped",!0)},leave(t){"BlockStatement"===t.type&&(this.replace(t.stmts),this.set("QwikScoped",!1))}});export{m as computed,b as css,x as events,f as link,o as qwik,d as resource,k as scoped,u as signal,y as store,p as task,l as vtask};
