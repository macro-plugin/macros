!function(e,t){function n(e){let t;if(e.body&&"BlockStatement"===e.body.type)for(let n=0;n<e.body.stmts.length;n++)if("LabeledStatement"===e.body.stmts[n].type&&(t=e.body.stmts[n],"qwik"===t.label.value)){if("ExpressionStatement"!==t.body.type||"BooleanLiteral"!==t.body.expression.type)throw new Error("Expect an boolean in qwik macro.");{e.body.stmts=e.body.stmts.filter(((e,t)=>t!==n));const a="identifier"in e&&null!=e.identifier;if(t.body.expression.value){this.import("component$","@builder.io/qwik");const t={type:"CallExpression",span:{start:55,end:79,ctxt:0},callee:{type:"Identifier",span:{start:55,end:65,ctxt:2},value:"component$",optional:!1},arguments:[{expression:a?{type:"ArrowFunctionExpression",span:{start:66,end:78,ctxt:0},params:e.params.map((e=>e.pat)),body:e.body,async:!1,generator:!1}:e}]};return a?{type:"VariableDeclaration",span:{start:43,end:80,ctxt:0},kind:"const",declare:!1,declarations:[{type:"VariableDeclarator",span:{start:49,end:79,ctxt:0},id:e.identifier,init:t,definite:!1}]}:t}}}}const a=t.createMacro({FunctionDeclaration(e){return n.apply(this,[e])},FunctionExpression(e){return n.apply(this,[e])},ArrowFunctionExpression(e){return n.apply(this,[e])}}),r=t.createLabeledBlock("task","useTask$","@builder.io/qwik"),s=t.createLabeledBlock("vtask","useVisibleTask$","@builder.io/qwik",!0),i=e=>{let t;return e=e.map((e=>{if("VariableDeclaration"===e.type&&"var"===e.kind){if("Identifier"!==e.declarations[0].id.type)throw new Error("Expect an Identifier");return t=e.declarations[0].id,{type:"ReturnStatement",argument:e.declarations[0].init,span:{start:0,end:0,ctxt:0}}}return e})),[t,e]},o=t.createLabeledMacro("resource",(function(e){if(this.import("useResource$","@builder.io/qwik"),"BlockStatement"===e.type){const[t,n]=i(e.stmts);return{type:"VariableDeclaration",declarations:[{type:"VariableDeclarator",definite:!1,span:{start:0,end:0,ctxt:0},id:t,init:{type:"CallExpression",callee:{type:"Identifier",optional:!1,value:"useResource$",span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0},arguments:[{expression:{type:"ArrowFunctionExpression",generator:!1,async:!1,params:[],span:{start:0,end:0,ctxt:0},body:{type:"BlockStatement",stmts:n,span:{start:0,end:0,ctxt:0}}}}]}}],span:{start:0,end:0,ctxt:0},declare:!1,kind:"const"}}if("ExpressionStatement"===e.type&&"ArrowFunctionExpression"===e.expression.type){let t,n;if("BlockStatement"!==e.expression.body.type)throw new Error("expect an arrow block inside resource.");return[t,n]=i(e.expression.body.stmts),e.expression.body.stmts=n,{type:"VariableDeclaration",declarations:[{type:"VariableDeclarator",definite:!1,span:{start:0,end:0,ctxt:0},id:t,init:{type:"CallExpression",callee:{type:"Identifier",value:"useResource$",span:{start:0,end:0,ctxt:0},optional:!1},arguments:[{expression:e.expression}],span:{start:0,end:0,ctxt:0}}}],kind:"const",span:{start:0,end:0,ctxt:0},declare:!1}}throw new Error("this macro only accept a ArrowFunction or BlockStatement")})),p=t.createLabeledMacro("store",(function(e){if("BlockStatement"!==e.type)return;const n={};let a;for(const t of e.stmts){if("VariableDeclaration"!==t.type||"var"!==t.kind)throw new Error("Expect a `var` kind VariableDeclaration node in store block");for(const e of t.declarations){if("Identifier"!==e.id.type)throw new Error("Expect Identifier in store");a=e.id.value,n[a]={value:e.init}}}return Object.keys(n).length>0?(this.import("useStore","@builder.io/qwik"),Object.entries(n).map((([e,n])=>({type:"VariableDeclaration",kind:"const",declare:!1,declarations:[{type:"VariableDeclarator",id:t.markedNode("qwikStore",{type:"Identifier",value:e,optional:!1,span:{start:0,end:0,ctxt:1}}),init:{type:"CallExpression",callee:{type:"Identifier",value:"useStore",optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:n.value}],span:{start:0,end:0,ctxt:0}},definite:!1,span:{start:0,end:0,ctxt:0}}],span:{start:0,end:0,ctxt:0}})))):void 0})),l=t.createMacro({LabeledStatement(e){if("BlockStatement"!==e.body.type||"signal"!==e.label.value)return;const n={};let a;for(const t of e.body.stmts){if("VariableDeclaration"!==t.type||"var"!==t.kind)throw new Error("Expect a `var` kind VariableDeclaration node in signal block");for(const e of t.declarations){if("Identifier"!==e.id.type)throw new Error("Expect Identifier in signal");a=e.id.value,n[a]={value:e.init}}}return Object.keys(n).length>0?(this.import("useSignal","@builder.io/qwik"),Object.entries(n).map((([e,n])=>({type:"VariableDeclaration",kind:"const",declare:!1,declarations:[{type:"VariableDeclarator",id:t.markedNode("qwikSignal",{type:"Identifier",value:e,optional:!1,span:{start:0,end:0,ctxt:1}}),init:{type:"CallExpression",callee:{type:"Identifier",value:"useSignal",optional:!1,span:{start:0,end:0,ctxt:0}},arguments:[{expression:n.value}],span:{start:0,end:0,ctxt:0}},definite:!1,span:{start:0,end:0,ctxt:0}}],span:{start:0,end:0,ctxt:0}})))):void 0},Identifier(e,t){var n;"VariableDeclarator"!==(null==t?void 0:t.type)&&"qwikSignal"===(null===(n=this.track(e.value))||void 0===n?void 0:n.marker)&&(this.replace({type:"MemberExpression",object:e,property:{type:"Identifier",value:"value",optional:!1,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0}}),this.skip())}}),c=t.createMacro({LabeledStatement:{enter(e){var t;if("document"===e.label.value&&"BlockStatement"===e.body.type)return void this.set("QwikInDocument",!0);if("window"===e.label.value&&"BlockStatement"===e.body.type)return void this.set("QwikInWindow",!0);const n=this.get("QwikInDocument",!1),a=this.get("QwikInWindow",!1);if(!e.label.value.startsWith("on")||!["BlockStatement","ExpressionStatement"].includes(e.body.type))return;let r,s=n?"useOnDocument":a?"useOnWindow":"useOn";if(this.import("$","@builder.io/qwik"),"BlockStatement"===e.body.type){const t=e.body.stmts[0];t&&"LabeledStatement"===t.type&&("document"===t.label.value?(e.body.stmts=e.body.stmts.slice(1),s="useOnDocument"):"window"===t.label.value&&(e.body.stmts=e.body.stmts.slice(1),s="useOnWindow")),r={type:"ArrowFunctionExpression",span:{start:26,end:87,ctxt:0},params:[],body:e.body,async:!1,generator:!1}}else if("ExpressionStatement"===e.body.type&&(r=e.body.expression,("FunctionExpression"===e.body.expression.type||"ArrowFunctionExpression"===e.body.expression.type)&&"BlockStatement"===(null===(t=e.body.expression.body)||void 0===t?void 0:t.type))){const t=e.body.expression.body.stmts[0];t&&"LabeledStatement"===t.type&&("document"===t.label.value?(e.body.expression.body.stmts=e.body.expression.body.stmts.slice(1),s="useOnDocument"):"window"===t.label.value&&(e.body.expression.body.stmts=e.body.expression.body.stmts.slice(1),s="useOnWindow"))}return this.import(s,"@builder.io/qwik"),{type:"ExpressionStatement",span:{start:0,end:93,ctxt:0},expression:{type:"CallExpression",span:{start:0,end:92,ctxt:0},callee:{type:"Identifier",span:{start:0,end:5,ctxt:1},value:s,optional:!1},arguments:[{expression:{type:"StringLiteral",span:{start:11,end:18,ctxt:0},value:e.label.value.slice(2),raw:`'${e.label.value.slice(2)}'`}},{expression:{type:"CallExpression",span:{start:24,end:88,ctxt:0},callee:{type:"Identifier",span:{start:24,end:25,ctxt:1},value:"$",optional:!1},arguments:[{expression:r}]}}]}}},leave(e){"document"===e.label.value&&"BlockStatement"===e.body.type&&(this.replace(e.body.stmts),this.set("QwikInDocument",!1)),"window"===e.label.value&&"BlockStatement"===e.body.type&&(this.replace(e.body.stmts),this.set("QwikInWindow",!1))}}}),d=t.createLabeledMacro("computed",(function(e){if("BlockStatement"!==e.type)return;const n={},a=[];let r;for(const s of e.stmts){if("VariableDeclaration"!==s.type||"var"!==s.kind)throw new Error("Expect a `var` kind VariableDeclaration node in signal block");for(const e of s.declarations){if("Identifier"!==e.id.type)throw new Error("Expect an Identifier");if(r=e.id.value,e.init){n[r]={value:JSON.parse(JSON.stringify(e.init)),computed:e.init};const s=e=>{var t;return"qwikSignal"===(null===(t=this.track(e))||void 0===t?void 0:t.marker)};t.walk(e.init,{enter(e){if("Identifier"===e.type){const n=e.value;s(n)&&(t.unMarkNode(e),e.value="__"+n,a.includes(n)||a.push(n))}}})}}}return Object.keys(n).length>0?(this.import(["useSignal","useTask$"],"@builder.io/qwik"),[...Object.entries(n).map((([e,n])=>({type:"VariableDeclaration",kind:"const",declarations:[{type:"VariableDeclarator",id:t.markedNode("qwikSignal",{type:"Identifier",value:e,span:{start:0,end:0,ctxt:0},optional:!1}),init:{type:"CallExpression",callee:{type:"Identifier",value:"useSignal",span:{start:0,end:0,ctxt:0},optional:!1},arguments:[{expression:n.value}],span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0}}],declare:!1,span:{start:0,end:0,ctxt:0}}))),{type:"ExpressionStatement",span:{start:0,end:0,ctxt:0},expression:{type:"CallExpression",callee:{type:"Identifier",value:"useTask$",optional:!1,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0},arguments:[{expression:{type:"ArrowFunctionExpression",async:!1,generator:!1,params:[{type:"ObjectPattern",optional:!1,span:{start:0,end:0,ctxt:0},properties:[{type:"AssignmentPatternProperty",span:{start:0,end:0,ctxt:0},key:{type:"Identifier",value:"track",optional:!1,span:{start:0,end:0,ctxt:1}}}]}],body:{type:"BlockStatement",span:{start:0,end:0,ctxt:0},stmts:[...a.map((e=>({type:"VariableDeclaration",kind:"const",declarations:[{type:"VariableDeclarator",definite:!1,span:{start:0,end:0,ctxt:0},id:{type:"Identifier",value:"__"+e,span:{start:0,end:0,ctxt:0},optional:!1},init:{type:"CallExpression",callee:{type:"Identifier",value:"track",span:{start:0,end:0,ctxt:0},optional:!1},span:{start:0,end:0,ctxt:0},arguments:[{expression:{type:"ArrowFunctionExpression",async:!1,generator:!1,params:[],body:{type:"Identifier",value:e,optional:!1,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0}}}]}}],declare:!1,span:{start:0,end:0,ctxt:0}}))),...Object.entries(n).map((([e,n])=>({type:"ExpressionStatement",expression:{type:"AssignmentExpression",operator:"=",left:t.markedNode("qwikSignal",{type:"Identifier",value:e,optional:!1,span:{start:0,end:0,ctxt:0}}),right:n.computed,span:{start:0,end:0,ctxt:0}},span:{start:0,end:0,ctxt:0}})))]},span:{start:0,end:0,ctxt:0}}}]}}]):void 0})),y=t.createLabeledMacro("css",(function(e){if("ExpressionStatement"===e.type){const t=this.get("QwikScoped",!1)?"useStyleScoped$":"useStyle$";return this.import(t,"@builder.io/qwik"),e.expression={type:"CallExpression",span:{start:109,end:119,ctxt:0},callee:{type:"Identifier",span:{start:109,end:112,ctxt:1},value:t,optional:!1},arguments:[{expression:e.expression}]},e}throw new Error("this macro only accept an Expression")})),u=t.createLabeledMacro("link",(function(e){if("ExpressionStatement"!==e.type)return;let t,n=this.get("QwikLinkCount",0);const a=this.get("QwikScoped",!1)?"useStyleScoped$":"useStyles$",r=[];if("StringLiteral"===e.expression.type)t="__link"+n,r.push(t),this.import(t,e.expression.value,!0),n+=1;else{if("ArrayExpression"!==e.expression.type)throw new Error("Only support StringLiteral or ArrayExpression");for(const a of e.expression.elements){if("StringLiteral"!==(null==a?void 0:a.expression.type))throw new Error("Expect a StringLiteral");t="__link"+n,r.push(t),this.import(t,a.expression.value,!0),n+=1}}return this.set("QwikLinkCount",n),this.import(a,"@builder.io/qwik"),r.map((e=>({type:"ExpressionStatement",span:{start:109,end:119,ctxt:0},expression:{type:"CallExpression",span:{start:109,end:119,ctxt:0},callee:{type:"Identifier",span:{start:109,end:112,ctxt:1},value:a,optional:!1},arguments:[{expression:{type:"Identifier",span:{start:113,end:118,ctxt:1},value:e,optional:!1}}]}})))})),x=t.createLabeledMacro("scoped",{enter(e){if("BlockStatement"!==e.type)throw new Error("Only accept BlockStatement in scoped macro.");this.set("QwikScoped",!0)},leave(e){"BlockStatement"===e.type&&(this.replace(e.stmts),this.set("QwikScoped",!1))}});e.computed=d,e.css=y,e.events=c,e.link=u,e.qwik=a,e.resource=o,e.scoped=x,e.signal=l,e.store=p,e.task=r,e.vtask=s}({},MacroCore);
