// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`$Argument macro transform 1`] = `
"const a = {
    "expression": {
        "type": "Identifier",
        "value": "ref",
        "optional": false,
        "span": {
            "start": 23,
            "end": 41,
            "ctxt": 0
        }
    }
};
const b = {
    "spread": {
        "start": 0,
        "end": 0,
        "ctxt": 0
    },
    "expression": {
        "type": "Identifier",
        "value": "list",
        "optional": false,
        "span": {
            "start": 65,
            "end": 84,
            "ctxt": 0
        }
    }
};
"
`;

exports[`$CallExpression macro transform 1`] = `
"const a = {
    "type": "CallExpression",
    "callee": {
        "type": "Identifier",
        "value": "ref",
        "optional": false,
        "span": {
            "start": 29,
            "end": 47,
            "ctxt": 0
        }
    },
    "arguments": [],
    "span": {
        "start": 13,
        "end": 48,
        "ctxt": 0
    }
};
const b = {
    "type": "CallExpression",
    "callee": {
        "type": "Identifier",
        "value": "ref",
        "optional": false,
        "span": {
            "start": 77,
            "end": 95,
            "ctxt": 0
        }
    },
    "arguments": [
        {
            "expression": {
                "type": "StringLiteral",
                "value": "hello",
                "span": {
                    "start": 113,
                    "end": 136,
                    "ctxt": 0
                }
            }
        }
    ],
    "span": {
        "start": 61,
        "end": 143,
        "ctxt": 0
    }
};
"
`;

exports[`$Identifier macro transform 1`] = `
"function id() {
    const a = {
        "type": "Identifier",
        "value": "value",
        "optional": false,
        "span": {
            "start": 37,
            "end": 57,
            "ctxt": 0
        }
    };
    const b = {
        "type": "Identifier",
        "value": "value",
        "optional": false,
        "span": {
            "start": 74,
            "end": 101,
            "ctxt": 0
        }
    };
    const c = {
        "type": "Identifier",
        "value": "value",
        "optional": true,
        "span": {
            "start": 118,
            "end": 144,
            "ctxt": 0
        }
    };
    const d = "value";
    const e = {
        "type": "Identifier",
        "value": d,
        "optional": true,
        "span": {
            "start": 185,
            "end": 205,
            "ctxt": 0
        }
    };
}
"
`;

exports[`$StringLiteral macro transform 1`] = `
"const a = {
    "type": "StringLiteral",
    "value": "hello",
    "span": {
        "start": 13,
        "end": 36,
        "ctxt": 0
    }
};
const v = "world";
const b = {
    "type": "StringLiteral",
    "value": v,
    "span": {
        "start": 69,
        "end": 86,
        "ctxt": 0
    }
};
"
`;

exports[`ctxt shouldn't rename variable name 1`] = `
"createMacro({
    MemberExpression: function MemberExpression(ast) {
        if (ast.object.type === "Identifier") {
            ast.object = {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "value": "$$ptagWrap",
                    "optional": false,
                    "span": {
                        "start":0,
                        "end":0,
                        "ctxt": 0
                    }
                },
                "arguments": [
                    {
                        "expression": ast.object
                    }
                ],
                "span": {
                    "start":0,
                    "end":0,
                    "ctxt": 0
                }
            };
        }
    }
});
"
`;

exports[`ctxt shouldn't rename variable name in multiple block 1`] = `
"createMacro({
    MemberExpression: function MemberExpression(ast) {
        if (ast.object.type === "Identifier") {
            ast.object = {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "value": "$$ptagWrap",
                    "optional": false,
                    "span": {
                        "start":0,
                        "end":0,
                        "ctxt": 0
                    }
                },
                "arguments": [
                    {
                        "expression": ast.object
                    }
                ],
                "span": {
                    "start":0,
                    "end":0,
                    "ctxt": 0
                }
            };
        }
    },
    CallExpression: function CallExpression(ast) {
        if (ast.callee.type === "Identifier") {
            ast.object = {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "value": "$$ptagWrap",
                    "optional": false,
                    "span": {
                        "start":0,
                        "end":0,
                        "ctxt": 0
                    }
                },
                "arguments": [
                    {
                        "expression": ast.callee
                    }
                ],
                "span": {
                    "start":0,
                    "end":0,
                    "ctxt": 0
                }
            };
        }
    }
});
"
`;

exports[`optional should works 1`] = `
"const a = {
    "start": 3,
    "end": 1,
    "ctxt": 2
};
const b = {
    "start": 0,
    "end": 1,
    "ctxt": 0
};
const d = {
    "start": 0,
    "end": 2,
    "ctxt": 5
};
const e = {
    "start": 0,
    "end": 0,
    "ctxt": 0
};
"
`;

exports[`overwite span should works 1`] = `
"{
    "type": "Import",
    "span": {
        "start": 3,
        "end": 12,
        "ctxt": 0
    }
};
{
    "type": "Import",
    "span": {
        "start": 15,
        "end": 33,
        "ctxt": 0
    }
};
{
    "type": "Import",
    "span": {
        "start": 36,
        "end": 49,
        "ctxt": 0
    }
};
{
    "type": "Import",
    "span": {
        "start": 0,
        "end": 1,
        "ctxt": 2
    }
};
const s = {
    "start": 3,
    "end": 4,
    "ctxt": 0
};
{
    "type": "Import",
    "span": s
};
"
`;
